@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<SUMI.Web.ViewModels.Claims.ClaimViewModel>
@{
    ViewData["Title"] = "All Pending Claims";
    int currentPage = ViewBag.CurrentPage;
    int count = (currentPage - 1) * GlobalConstants.EntriesPerPage + 1;
    string standardBegining = GlobalConstants.ClaimStandardBegining;
}

<h2>@ViewData["Title"]</h2>
<hr class="withMargin" />
@if (Model.Count == 0)
{
    <h4 class="font-italic">Currently there are no pending claims.</h4>
}
else
{
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col" style="width: 4%">#</th>
                <th scope="col" style="width: 72%">Claim number</th>
                <th scope="col" style="width: 24%">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@count</th>
                    <td>@standardBegining@item.Id / @item.CreatedOn.Substring(0, 12)</td>
                    <td>
                        <a class="btn btn-primary" asp-controller="Claims" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
                count++;
            }
        </tbody>
    </table>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("All", new { page }))
}

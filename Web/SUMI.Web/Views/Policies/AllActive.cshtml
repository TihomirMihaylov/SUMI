@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<SUMI.Web.ViewModels.Policies.PolicyViewModel>
@{
    ViewData["Title"] = "All active Policies";
    int currentPage = ViewBag.CurrentPage;
    int count = (currentPage - 1) * GlobalConstants.EntriesPerPage + 1;
}

<h2>@ViewData["Title"]</h2>
<hr class="withMargin" />
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col" style="width: 4%">#</th>
            <th scope="col" style="width: 16%">Make</th>
            <th scope="col" style="width: 16%">Model</th>
            <th scope="col" style="width: 20%">Number Plate</th>
            <th scope="col" style="width: 24%">Expiration Date</th>
            <th scope="col" style="width: 20%">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th scope="row">@count</th>
                <td>@item.VehicleMake</td>
                <td>@item.VehicleModel</td>
                <td>@item.VehicleNumberPlate</td>
                <td>@item.ExpirationDate</td>
                <td>
                    <a class="btn btn-primary" asp-controller="Policies" asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
            count++;
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("All", new { page }))
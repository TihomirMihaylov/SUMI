@model SUMI.Web.ViewModels.Policies.PolicyDetailsViewModel
@{
    ViewData["Title"] = "Policy Details";
    string status = Model.IsValid ? "Valid" : "Invalid";
}

<div class="row justify-content-center">
    <h2>@ViewData["Title"]</h2>
</div>
<hr class="thick" />

<div id="tabs">
    <ul>
        <li><a href="#tabs-1">Policy Data</a></li>
        <li><a href="#tabs-2">Vehicle</a></li>
        <li><a href="#tabs-3">Client</a></li>
        <li><a href="#tabs-4">Agent</a></li>
    </ul>
    <div id="tabs-1">
        <div class="row">
            <div class="col col-md-6">
                <h5 class="withMargin">Insurance Sum: @Model.InsuranceSum EUR</h5>
                <h5 class="withMargin">Premium: @Model.Premium EUR</h5>
                <h5 class="withMargin">Valid Until: @Model.ExpirationDate</h5>
                <h5 class="withMargin">Number of Claims: @Model.Claims.Count</h5>
                @if (Model.IsValid)
                {
                    <h5 id="statusValid" class="withMargin"><span style="background-color:lightgreen">Status: @status</span></h5>
                    <h5 id="statusInvalid" class="withMargin" style="display:none"><span style="background-color:red">Status: @status</span></h5>
                }
                else
                {
                    <h5 class="withMargin"><span style="background-color:red">Status: @status</span></h5>
                }

                <input id="policyId" type="hidden" value="@Model.Id" />
                @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                {
                    <h5 class="withMargin">Total amount spend on damages: @Model.TotalSpent EUR</h5>
                    if (Model.IsValid)
                    {
                        <btn type="button" id="btnTerminate" class="btn btn-danger btn-sm">Terminate Policy</btn>
                        <p id="terminationStatus" class="text-danger"></p>
                    }
                }
            </div>

            <div class="col col-md-6">
                @if (!this.User.IsInRole(GlobalConstants.ClientRoleName))
                {
                    <h5 class="font-weight-bold">Claims:</h5>
                    <partial name="_ClaimsSection" />
                }
            </div>
        </div>

        @if (!this.User.IsInRole(GlobalConstants.ClientRoleName))
        {
            <hr class="thick" />
            <div class="row withMargin">
                <h5 class="font-weight-bold">Comments:</h5>
                <partial name="_CommentsSection" />
            </div>
        }

    </div>
    <div id="tabs-2">
        <h5 class="withMargin">Make: @Model.VehicleMake</h5>
        <h5 class="withMargin">Model: @Model.VehicleModel</h5>
        <h5 class="withMargin">VIN: @Model.VehicleVIN</h5>
        <h5 class="withMargin">Number plate: @Model.VehicleNumberPlate</h5>
        <h5 class="withMargin">Date of first registration: @Model.VehicleFirstRegistration.Substring(0, 12)</h5>
        <h5 class="withMargin">Type: @Model.VehicleType</h5>
    </div>
    <div id="tabs-3">
        <h5 class="withMargin">Name: @Model.ClientFirstName @Model.ClientLastName</h5>
        <h5 class="withMargin">UCN: @Model.ClientUniversalCitizenNumber</h5>
        <h5 class="withMargin">Birthday: @Model.ClientBirthday.Substring(0,12)</h5>
    </div>
    <div id="tabs-4">
        <h5 class="withMargin">This policy was issued by: @Model.Agent.FirstName @Model.Agent.LastName</h5>
        <h5 class="withMargin">Contacts: @Model.Agent.Email</h5>
    </div>
</div>

@section Scripts {

    <script>
        $(function () {
            $("#tabs").tabs();
        });

        window.onload = function () {
            $('#btnTerminate').click(function () {
                let id = $('#policyId').val();
                let statusParagraph = $('#terminationStatus');
                $.ajax({
                    method: 'GET',
                    url: '/Administrator/Policies/Terminate/' + id,
                }).then(() => {
                    statusParagraph.text('Policy terminated successfully.').show();
                    $('#btnTerminate').attr("disabled", "disabled");
                    $('#statusValid').hide();
                    $('#statusInvalid').show();
                })
                    .catch(() => {
                        statusParagraph.text('There was an error with your request.').hide();
                    });
            });

            $('#btnComment').click(function () {
                let text = $('#textArea').val();
                let policyId = $('#policyId').val();
                if (text != '') {
                    $.ajax({
                        method: 'POST',
                        url: '/Comments/Create',
                        data: { text, policyId },
                    }).then(() => {
                        $('#textArea').val('');
                        $('#commentConfirmation').hide();
                        document.location.reload();
                    })
                      .catch(() => {
                          $('#commentConfirmation').show();
                      });
                }
            });

            $('#comments > a').click(function (event) {
                let id = event.target.getAttribute('comment-id');
                $.ajax({
                    method: 'POST',
                    url: '/Comments/Delete',
                    data: { id },
                }).then(() => {
                    document.location.reload();
                })
            });
        };
    </script>
}
